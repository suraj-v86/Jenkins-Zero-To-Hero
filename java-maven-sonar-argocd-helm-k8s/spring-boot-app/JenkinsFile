pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket
    }
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo "Checking out code..."'
        sh 'git checkout main || git checkout -b main'
      }
    }

    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }

    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://34.229.240.121:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}
          '''
        }
      }
    }

    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "surajv86/ultimate-cicd-pipeline:${BUILD_NUMBER}"
      }
      steps {
        withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASSWORD')]) {
          sh '''
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            docker build -t ${DOCKER_IMAGE} .
        
            echo "Logging into DockerHub..."
            echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USER}" --password-stdin
        
            echo "Pushing Docker image..."
            docker push ${DOCKER_IMAGE}
        
            echo "Logout from DockerHub..."
            docker logout
          '''
        }
      }
    }

    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
        GIT_USER_NAME = "suraj-v86"
      }
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            echo "Checking out the latest code..."
            git checkout main || git checkout -b main

            echo "Setting Git user info..."
            git config user.email "suraj.xyz@gmail.com"
            git config user.name "Suraj Vasudevan"

            echo "Verifying BUILD_NUMBER=${BUILD_NUMBER}"
            echo "Checking if replaceImageTag exists..."
            grep "replaceImageTag" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml || echo "replaceImageTag not found"

            echo "Updating deployment.yml with new image tag..."
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml

            echo "Verifying if update was successful..."
            grep "${BUILD_NUMBER}" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml || echo "Update failed, trying alternative method..."

            if ! grep "${BUILD_NUMBER}" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml; then
              echo "Using awk as fallback..."
              awk '{gsub(/replaceImageTag/, "'${BUILD_NUMBER}'"); print}' java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml > temp.yml
              mv temp.yml java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            fi

            echo "Checking file permissions..."
            chmod +w java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml

            echo "Adding and committing changes..."
            git add -f java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git status
            git commit -m "Update deployment image to version ${BUILD_NUMBER}"

            echo "Pushing changes..."
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }
}
